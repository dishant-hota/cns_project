
        body {
            font-family: 'Inter', sans-serif;
            background-color: #111827; /* bg-gray-900 */
            color: #F3F4F6; /* text-gray-100 */
        }
        /* Custom styles for the log */
        .log-entry {
            font-family: 'Courier New', Courier, monospace;
            padding: 2px 4px;
            margin-bottom: 4px;
            border-radius: 4px;
        }
        .log-server { color: #4ADE80; /* text-green-400 */ }
        .log-attacker { color: #F87171; /* text-red-400 */ }
        .log-system { color: #60A5FA; /* text-blue-400 */ }
        .log-warning { color: #FACC15; /* text-yellow-400 */ }
        #log-box {
            height: 300px;
            background-color: #1F2937; /* bg-gray-800 */
            border: 1px solid #374151; /* border-gray-700 */
            border-radius: 8px;
            padding: 1rem;
            overflow-y: scroll;
        }
        /* Style for the port indicators */
        .port {
            display: inline-block;
            width: 50px;
            padding: 0.5rem;
            margin: 0.25rem;
            border-radius: 0.375rem;
            text-align: center;
            font-weight: 500;
            background-color: #374151; /* bg-gray-700 */
            transition: all 0.3s ease;
        }
        .port-active { background-color: #22C55E; /* bg-green-500 */ }
        .port-scan { background-color: #EF4444; /* bg-red-500 */ }

        /* Accessibility / defensive fix: if an input is being covered by a sticky
           or overlay element, the following rules help ensure form controls remain
           interactive and sit above casual overlays. These are intentionally
           conservative and only raise z-index/enable pointer-events for inputs.
           If you have a specific overlay class (modal/overlay/sticky-header), prefer
           adjusting that overlay instead (set pointer-events: none when hidden, or
           reduce its z-index). */
        input, textarea, select, button {
            position: relative;
            z-index: 50; /* place controls above simple overlays */
            pointer-events: auto; /* ensure they can receive clicks/focus */
        }

        /* Common overlay helper: if an overlay element exists and should *not*
           capture clicks (when hidden or decorative), give it a helper class
           `.overlay-hidden` and it will allow clicks through. */
        .overlay-hidden {
            pointer-events: none !important;
        }

        /* If you have a sticky header that covers anchor targets, use scroll-margin
           to ensure targets are scrolled into view correctly and are reachable. */
        [id] {
            scroll-margin-top: 4rem;
        }
    